// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package grafana

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-grafana/sdk/go/grafana"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := grafana.NewAlertNotification(ctx, "emailSometeam", &grafana.AlertNotificationArgs{
//				Frequency:    pulumi.String("24h"),
//				IsDefault:    pulumi.Bool(false),
//				SendReminder: pulumi.Bool(true),
//				Settings: pulumi.AnyMap{
//					"addresses":   pulumi.Any("foo@example.net;bar@example.net"),
//					"uploadImage": pulumi.Any("false"),
//				},
//				Type: pulumi.String("email"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import grafana:index/alertNotification:AlertNotification alert_notification_name {{alert_notification_id}}
//
// ```
type AlertNotification struct {
	pulumi.CustomResourceState

	// Whether to disable sending resolve messages. Defaults to `false`.
	DisableResolveMessage pulumi.BoolPtrOutput `pulumi:"disableResolveMessage"`
	// Frequency of alert reminders. Frequency must be set if reminders are enabled. Defaults to ``.
	Frequency pulumi.StringPtrOutput `pulumi:"frequency"`
	// Is this the default channel for all your alerts. Defaults to `false`.
	IsDefault pulumi.BoolPtrOutput `pulumi:"isDefault"`
	// The name of the alert notification channel.
	Name pulumi.StringOutput `pulumi:"name"`
	// Additional secure settings, for full reference lookup [Grafana Supported Settings documentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).
	SecureSettings pulumi.MapOutput `pulumi:"secureSettings"`
	// Whether to send reminders for triggered alerts. Defaults to `false`.
	SendReminder pulumi.BoolPtrOutput `pulumi:"sendReminder"`
	// Additional settings, for full reference see [Grafana HTTP API documentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).
	Settings pulumi.MapOutput `pulumi:"settings"`
	// The type of the alert notification channel.
	Type pulumi.StringOutput `pulumi:"type"`
	// Unique identifier. If unset, this will be automatically generated.
	Uid pulumi.StringOutput `pulumi:"uid"`
}

// NewAlertNotification registers a new resource with the given unique name, arguments, and options.
func NewAlertNotification(ctx *pulumi.Context,
	name string, args *AlertNotificationArgs, opts ...pulumi.ResourceOption) (*AlertNotification, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.SecureSettings != nil {
		args.SecureSettings = pulumi.ToSecret(args.SecureSettings).(pulumi.MapInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secureSettings",
	})
	opts = append(opts, secrets)
	opts = pkgResourceDefaultOpts(opts)
	var resource AlertNotification
	err := ctx.RegisterResource("grafana:index/alertNotification:AlertNotification", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertNotification gets an existing AlertNotification resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertNotification(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertNotificationState, opts ...pulumi.ResourceOption) (*AlertNotification, error) {
	var resource AlertNotification
	err := ctx.ReadResource("grafana:index/alertNotification:AlertNotification", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertNotification resources.
type alertNotificationState struct {
	// Whether to disable sending resolve messages. Defaults to `false`.
	DisableResolveMessage *bool `pulumi:"disableResolveMessage"`
	// Frequency of alert reminders. Frequency must be set if reminders are enabled. Defaults to ``.
	Frequency *string `pulumi:"frequency"`
	// Is this the default channel for all your alerts. Defaults to `false`.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the alert notification channel.
	Name *string `pulumi:"name"`
	// Additional secure settings, for full reference lookup [Grafana Supported Settings documentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).
	SecureSettings map[string]interface{} `pulumi:"secureSettings"`
	// Whether to send reminders for triggered alerts. Defaults to `false`.
	SendReminder *bool `pulumi:"sendReminder"`
	// Additional settings, for full reference see [Grafana HTTP API documentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).
	Settings map[string]interface{} `pulumi:"settings"`
	// The type of the alert notification channel.
	Type *string `pulumi:"type"`
	// Unique identifier. If unset, this will be automatically generated.
	Uid *string `pulumi:"uid"`
}

type AlertNotificationState struct {
	// Whether to disable sending resolve messages. Defaults to `false`.
	DisableResolveMessage pulumi.BoolPtrInput
	// Frequency of alert reminders. Frequency must be set if reminders are enabled. Defaults to ``.
	Frequency pulumi.StringPtrInput
	// Is this the default channel for all your alerts. Defaults to `false`.
	IsDefault pulumi.BoolPtrInput
	// The name of the alert notification channel.
	Name pulumi.StringPtrInput
	// Additional secure settings, for full reference lookup [Grafana Supported Settings documentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).
	SecureSettings pulumi.MapInput
	// Whether to send reminders for triggered alerts. Defaults to `false`.
	SendReminder pulumi.BoolPtrInput
	// Additional settings, for full reference see [Grafana HTTP API documentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).
	Settings pulumi.MapInput
	// The type of the alert notification channel.
	Type pulumi.StringPtrInput
	// Unique identifier. If unset, this will be automatically generated.
	Uid pulumi.StringPtrInput
}

func (AlertNotificationState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertNotificationState)(nil)).Elem()
}

type alertNotificationArgs struct {
	// Whether to disable sending resolve messages. Defaults to `false`.
	DisableResolveMessage *bool `pulumi:"disableResolveMessage"`
	// Frequency of alert reminders. Frequency must be set if reminders are enabled. Defaults to ``.
	Frequency *string `pulumi:"frequency"`
	// Is this the default channel for all your alerts. Defaults to `false`.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the alert notification channel.
	Name *string `pulumi:"name"`
	// Additional secure settings, for full reference lookup [Grafana Supported Settings documentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).
	SecureSettings map[string]interface{} `pulumi:"secureSettings"`
	// Whether to send reminders for triggered alerts. Defaults to `false`.
	SendReminder *bool `pulumi:"sendReminder"`
	// Additional settings, for full reference see [Grafana HTTP API documentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).
	Settings map[string]interface{} `pulumi:"settings"`
	// The type of the alert notification channel.
	Type string `pulumi:"type"`
	// Unique identifier. If unset, this will be automatically generated.
	Uid *string `pulumi:"uid"`
}

// The set of arguments for constructing a AlertNotification resource.
type AlertNotificationArgs struct {
	// Whether to disable sending resolve messages. Defaults to `false`.
	DisableResolveMessage pulumi.BoolPtrInput
	// Frequency of alert reminders. Frequency must be set if reminders are enabled. Defaults to ``.
	Frequency pulumi.StringPtrInput
	// Is this the default channel for all your alerts. Defaults to `false`.
	IsDefault pulumi.BoolPtrInput
	// The name of the alert notification channel.
	Name pulumi.StringPtrInput
	// Additional secure settings, for full reference lookup [Grafana Supported Settings documentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).
	SecureSettings pulumi.MapInput
	// Whether to send reminders for triggered alerts. Defaults to `false`.
	SendReminder pulumi.BoolPtrInput
	// Additional settings, for full reference see [Grafana HTTP API documentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).
	Settings pulumi.MapInput
	// The type of the alert notification channel.
	Type pulumi.StringInput
	// Unique identifier. If unset, this will be automatically generated.
	Uid pulumi.StringPtrInput
}

func (AlertNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertNotificationArgs)(nil)).Elem()
}

type AlertNotificationInput interface {
	pulumi.Input

	ToAlertNotificationOutput() AlertNotificationOutput
	ToAlertNotificationOutputWithContext(ctx context.Context) AlertNotificationOutput
}

func (*AlertNotification) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertNotification)(nil)).Elem()
}

func (i *AlertNotification) ToAlertNotificationOutput() AlertNotificationOutput {
	return i.ToAlertNotificationOutputWithContext(context.Background())
}

func (i *AlertNotification) ToAlertNotificationOutputWithContext(ctx context.Context) AlertNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertNotificationOutput)
}

// AlertNotificationArrayInput is an input type that accepts AlertNotificationArray and AlertNotificationArrayOutput values.
// You can construct a concrete instance of `AlertNotificationArrayInput` via:
//
//	AlertNotificationArray{ AlertNotificationArgs{...} }
type AlertNotificationArrayInput interface {
	pulumi.Input

	ToAlertNotificationArrayOutput() AlertNotificationArrayOutput
	ToAlertNotificationArrayOutputWithContext(context.Context) AlertNotificationArrayOutput
}

type AlertNotificationArray []AlertNotificationInput

func (AlertNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertNotification)(nil)).Elem()
}

func (i AlertNotificationArray) ToAlertNotificationArrayOutput() AlertNotificationArrayOutput {
	return i.ToAlertNotificationArrayOutputWithContext(context.Background())
}

func (i AlertNotificationArray) ToAlertNotificationArrayOutputWithContext(ctx context.Context) AlertNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertNotificationArrayOutput)
}

// AlertNotificationMapInput is an input type that accepts AlertNotificationMap and AlertNotificationMapOutput values.
// You can construct a concrete instance of `AlertNotificationMapInput` via:
//
//	AlertNotificationMap{ "key": AlertNotificationArgs{...} }
type AlertNotificationMapInput interface {
	pulumi.Input

	ToAlertNotificationMapOutput() AlertNotificationMapOutput
	ToAlertNotificationMapOutputWithContext(context.Context) AlertNotificationMapOutput
}

type AlertNotificationMap map[string]AlertNotificationInput

func (AlertNotificationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertNotification)(nil)).Elem()
}

func (i AlertNotificationMap) ToAlertNotificationMapOutput() AlertNotificationMapOutput {
	return i.ToAlertNotificationMapOutputWithContext(context.Background())
}

func (i AlertNotificationMap) ToAlertNotificationMapOutputWithContext(ctx context.Context) AlertNotificationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertNotificationMapOutput)
}

type AlertNotificationOutput struct{ *pulumi.OutputState }

func (AlertNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertNotification)(nil)).Elem()
}

func (o AlertNotificationOutput) ToAlertNotificationOutput() AlertNotificationOutput {
	return o
}

func (o AlertNotificationOutput) ToAlertNotificationOutputWithContext(ctx context.Context) AlertNotificationOutput {
	return o
}

// Whether to disable sending resolve messages. Defaults to `false`.
func (o AlertNotificationOutput) DisableResolveMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertNotification) pulumi.BoolPtrOutput { return v.DisableResolveMessage }).(pulumi.BoolPtrOutput)
}

// Frequency of alert reminders. Frequency must be set if reminders are enabled. Defaults to “.
func (o AlertNotificationOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertNotification) pulumi.StringPtrOutput { return v.Frequency }).(pulumi.StringPtrOutput)
}

// Is this the default channel for all your alerts. Defaults to `false`.
func (o AlertNotificationOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertNotification) pulumi.BoolPtrOutput { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The name of the alert notification channel.
func (o AlertNotificationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertNotification) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Additional secure settings, for full reference lookup [Grafana Supported Settings documentation](https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings).
func (o AlertNotificationOutput) SecureSettings() pulumi.MapOutput {
	return o.ApplyT(func(v *AlertNotification) pulumi.MapOutput { return v.SecureSettings }).(pulumi.MapOutput)
}

// Whether to send reminders for triggered alerts. Defaults to `false`.
func (o AlertNotificationOutput) SendReminder() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertNotification) pulumi.BoolPtrOutput { return v.SendReminder }).(pulumi.BoolPtrOutput)
}

// Additional settings, for full reference see [Grafana HTTP API documentation](https://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/).
func (o AlertNotificationOutput) Settings() pulumi.MapOutput {
	return o.ApplyT(func(v *AlertNotification) pulumi.MapOutput { return v.Settings }).(pulumi.MapOutput)
}

// The type of the alert notification channel.
func (o AlertNotificationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertNotification) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Unique identifier. If unset, this will be automatically generated.
func (o AlertNotificationOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertNotification) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

type AlertNotificationArrayOutput struct{ *pulumi.OutputState }

func (AlertNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertNotification)(nil)).Elem()
}

func (o AlertNotificationArrayOutput) ToAlertNotificationArrayOutput() AlertNotificationArrayOutput {
	return o
}

func (o AlertNotificationArrayOutput) ToAlertNotificationArrayOutputWithContext(ctx context.Context) AlertNotificationArrayOutput {
	return o
}

func (o AlertNotificationArrayOutput) Index(i pulumi.IntInput) AlertNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertNotification {
		return vs[0].([]*AlertNotification)[vs[1].(int)]
	}).(AlertNotificationOutput)
}

type AlertNotificationMapOutput struct{ *pulumi.OutputState }

func (AlertNotificationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertNotification)(nil)).Elem()
}

func (o AlertNotificationMapOutput) ToAlertNotificationMapOutput() AlertNotificationMapOutput {
	return o
}

func (o AlertNotificationMapOutput) ToAlertNotificationMapOutputWithContext(ctx context.Context) AlertNotificationMapOutput {
	return o
}

func (o AlertNotificationMapOutput) MapIndex(k pulumi.StringInput) AlertNotificationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertNotification {
		return vs[0].(map[string]*AlertNotification)[vs[1].(string)]
	}).(AlertNotificationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertNotificationInput)(nil)).Elem(), &AlertNotification{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertNotificationArrayInput)(nil)).Elem(), AlertNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertNotificationMapInput)(nil)).Elem(), AlertNotificationMap{})
	pulumi.RegisterOutputType(AlertNotificationOutput{})
	pulumi.RegisterOutputType(AlertNotificationArrayOutput{})
	pulumi.RegisterOutputType(AlertNotificationMapOutput{})
}
